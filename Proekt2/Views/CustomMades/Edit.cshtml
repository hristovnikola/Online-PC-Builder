@model Proekt2.Models.CustomMade

@{
    ViewBag.Title = "Edit";
}




<html>

<head>

    <style>
        .btn-primary {
            color: #fff;
            background-color: #128FC8;
            border-color: #128FC8;
        }
    </style>
</head>

<body>
    <div class="container py-4">
        <h2 class="text-center">You are currently editing: @Model.Name</h2>


        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4 class="pt-3 text-center">Edit the product and click on the „Edit“ button. If you change your mind then click on the „Back to List“ button.</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)

                <div class="form-group my-2">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label " })
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control w-100" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>

                <div class="form-group my-2">
                    @Html.LabelFor(model => model.ImgURL, htmlAttributes: new { @class = "control-label " })
                    @Html.EditorFor(model => model.ImgURL, new { htmlAttributes = new { @class = "form-control w-100" } })
                    @Html.ValidationMessageFor(model => model.ImgURL, "", new { @class = "text-danger" })
                </div>

                <div class="form-group my-2">
                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label " })
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control w-100" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>

                <div class="form-group my-2">
                    @Html.LabelFor(model => model.Processor, htmlAttributes: new { @class = "control-label " })
                    @Html.EditorFor(model => model.Processor, new { htmlAttributes = new { @class = "form-control w-100" } })
                    @Html.ValidationMessageFor(model => model.Processor, "", new { @class = "text-danger" })
                </div>

                <div class="form-group my-2">
                    @Html.LabelFor(model => model.MotherBoard, htmlAttributes: new { @class = "control-label " })
                    @Html.EditorFor(model => model.MotherBoard, new { htmlAttributes = new { @class = "form-control w-100" } })
                    @Html.ValidationMessageFor(model => model.MotherBoard, "", new { @class = "text-danger" })
                </div>

                <div class="form-group my-2">
                    @Html.LabelFor(model => model.Storage, htmlAttributes: new { @class = "control-label " })
                    @Html.EditorFor(model => model.Storage, new { htmlAttributes = new { @class = "form-control w-100" } })
                    @Html.ValidationMessageFor(model => model.Storage, "", new { @class = "text-danger" })
                </div>

                <div class="form-group my-2">
                    @Html.LabelFor(model => model.PowerSupply, htmlAttributes: new { @class = "control-label " })
                    @Html.EditorFor(model => model.PowerSupply, new { htmlAttributes = new { @class = "form-control w-100" } })
                    @Html.ValidationMessageFor(model => model.PowerSupply, "", new { @class = "text-danger" })
                </div>

                <div class="form-group my-2">
                    @Html.LabelFor(model => model.RAM, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.RAM, new { htmlAttributes = new { @class = "form-control w-100" } })
                    @Html.ValidationMessageFor(model => model.RAM, "", new { @class = "text-danger" })
                </div>

                <div class="form-group my-2">
                    @Html.LabelFor(model => model.GraphicsCard, htmlAttributes: new { @class = "control-label " })
                    @Html.EditorFor(model => model.GraphicsCard, new { htmlAttributes = new { @class = "form-control w-100" } })
                    @Html.ValidationMessageFor(model => model.GraphicsCard, "", new { @class = "text-danger" })
                </div>

                <div class="form-group my-2">
                    @Html.LabelFor(model => model.Case, htmlAttributes: new { @class = "control-label " })
                    @Html.EditorFor(model => model.Case, new { htmlAttributes = new { @class = "form-control w-100" } })
                    @Html.ValidationMessageFor(model => model.Case, "", new { @class = "text-danger" })
                </div>

                <div class="form-group my-2">
                    @Html.LabelFor(model => model.Case, htmlAttributes: new { @class = "control-label " })
                    @Html.EditorFor(model => model.Case, new { htmlAttributes = new { @class = "form-control w-100" } })
                    @Html.ValidationMessageFor(model => model.Case, "", new { @class = "text-danger" })
                </div>

                <div class="d-flex">
                    <input type="submit" value="Save" class="btn btn-primary mt-3 py-2 px-4 me-3" />
                    @Html.ActionLink("Back to List", "Index", "CustomMades", new { }, new { @class = "btn btn-primary mt-3 py-2 px-4" })
                </div>


            </div>
        }

        <div>

        </div>
    </div>
</body>
</html>
<div>
    @Html.ActionLink("Back to List", "Index", "Products")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}