@model Proekt2.Models.Product

@{
    ViewBag.Title = "Delete";
}

<html>
<head>
    <style>
        .btn-primary {
            color: #fff;
            background-color: #128FC8;
            border-color: #128FC8;
        }
    </style>
</head>

<body>
    <div class="container py-4">
        <h2 class="text-center">Are you sure you want to delete: @Model.Name ?</h2>


        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4 class="pt-3 text-center">Delete the product and click on the „Delete“ button. If you change your mind then click on the „Back to List“ button.</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)

                <div class="form-group my-2">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label " })
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control w-100" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>

                <div class="form-group my-2">
                    @Html.LabelFor(model => model.ImgURL, htmlAttributes: new { @class = "control-label " })
                    @Html.EditorFor(model => model.ImgURL, new { htmlAttributes = new { @class = "form-control w-100" } })
                    @Html.ValidationMessageFor(model => model.ImgURL, "", new { @class = "text-danger" })
                </div>

                <div class="form-group my-2">
                    @Html.LabelFor(model => model.ShortDescription, htmlAttributes: new { @class = "control-label " })
                    @Html.EditorFor(model => model.ShortDescription, new { htmlAttributes = new { @class = "form-control w-100" } })
                    @Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
                </div>

                <div class="form-group my-2">
                    @Html.LabelFor(model => model.LongDescription, htmlAttributes: new { @class = "control-label" })
                    @Html.TextAreaFor(model => model.LongDescription, new { @class = "form-control w-100 h-100 textarea", rows = "5" })
                    @Html.ValidationMessageFor(model => model.LongDescription, "", new { @class = "text-danger" })
                </div>

                <div class="form-group my-2">
                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label " })
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control w-100" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>

                <div class="form-group my-2">
                    @Html.LabelFor(model => model.InStock, htmlAttributes: new { @class = "control-label " })
                    @Html.EditorFor(model => model.InStock, new { @class = "checkbox" })
                    @Html.ValidationMessageFor(model => model.InStock, "", new { @class = "text-danger" })
                </div>

                <div class="form-group my-2">
                    @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label" })
                    @Html.EnumDropDownListFor(model => model.Category, htmlAttributes: new { @class = "form-control w-100" })
                    @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                </div>

                <div class="form-group my-2">
                    @Html.LabelFor(model => model.Manufacturer, htmlAttributes: new { @class = "control-label " })
                    @Html.EnumDropDownListFor(model => model.Manufacturer, htmlAttributes: new { @class = "form-control w-100" })
                    @Html.ValidationMessageFor(model => model.Manufacturer, "", new { @class = "text-danger" })
                </div>


                <div class="d-flex">
                    <input type="submit" value="Delete" class="btn btn-primary mt-3 py-2 px-4 me-3" />
                    @Html.ActionLink("Back to List", "Index", new { }, new { @class = "btn btn-primary mt-3 py-2 px-4" })
                </div>


            </div>
        }

        <div>

        </div>
    </div>
</body>
</html>